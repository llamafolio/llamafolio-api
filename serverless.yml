org: llamafolio
app: llamafolio-api
service: llamafolio-api

package:
  individually: true

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-central-1
  endpointType: REGIONAL # Set to regional because the api gateway will be behind a cloudfront distribution
  tracing:
    apiGateway: true
    lambda: true
  memorySize: 256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 's3:ListBucket'
        - 's3:*Object*'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
      Resource:
        - 'arn:aws:dynamodb:eu-central-1:610755237132:table/${self:custom.tableName}'

  environment:
    CLICKHOUSE_HOST: ${env:CLICKHOUSE_HOST}
    CLICKHOUSE_USER: ${env:CLICKHOUSE_USER}
    CLICKHOUSE_PASSWORD: ${env:CLICKHOUSE_PASSWORD}
    STAGE: ${self:custom.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    LLAMANODES_API_KEY: ${env:LLAMANODES_API_KEY}
    DEFILLAMA_LABELS_API_KEY: ${env:DEFILLAMA_LABELS_API_KEY}
    DEFILLAMA_PRICE_API_KEY: ${env:DEFILLAMA_PRICE_API_KEY}
    SENTRY_DSN: ${env:SENTRY_DSN}
    CLOUDFLARE_R2_PUBLIC_URL: ${env:CLOUDFLARE_R2_PUBLIC_URL}
    SLACK_TOKEN: ${env:SLACK_TOKEN}
    SLACK_CHANNEL_ID: ${env:SLACK_CHANNEL_ID}
    #
    ANKR_API_KEY: ${env:ANKR_API_KEY}
    NFTPORT_API_KEY: ${env:NFTPORT_API_KEY}
    OPENSEA_API_KEY: ${env:OPENSEA_API_KEY}
    NFTSCAN_API_KEY: ${env:NFTSCAN_API_KEY}
    ALCHEMY_API_KEY: ${env:ALCHEMY_API_KEY}
    CENTER_API_KEY: ${env:CENTER_API_KEY}
    QUICKNODE_API_KEY: ${env:QUICKNODE_API_KEY}
    QUICKNODE_HTTP_URL: ${env:QUICKNODE_HTTP_URL}
    RESERVOIR_API_KEY: ${env:RESERVOIR_API_KEY}
    tableName: ${self:custom.tableName}

functions:
  fallback:
    handler: src/handlers/fallback.handler
    events:
      - http:
          path: /{params+}
          method: any

  corsPreflight:
    handler: src/handlers/corsPreflight.handler
    events:
      - http:
          path: /{params+}
          method: options

  getNFTs:
    handler: src/handlers/getNFTs.handler
    description: Get address nfts
    events:
      - http:
          method: get
          path: /nfts/{address}
    timeout: 29
    memorySize: 512

  getNFTsHistory:
    handler: src/handlers/getNFTsHistory.handler
    description: Get nfts activity history
    events:
      - http:
          method: get
          path: /nfts/history/{address}
    timeout: 29
    memorySize: 512

  getBalances:
    handler: src/handlers/getBalances.handler
    description: Get address balances
    events:
      - http:
          method: get
          path: /balances/{address}
    timeout: 10

  getBalancesTokens:
    handler: src/handlers/getBalancesTokens.handler
    description: Get address erc20 balances
    events:
      - http:
          method: get
          path: /balances/{address}/tokens
    timeout: 15
    memorySize: 512

  getCalendar:
    handler: src/handlers/getCalendar.handler
    description: Get calendar
    events:
      - http:
          method: get
          path: /calendar/{address}
    timeout: 10

  getContract:
    handler: src/handlers/getContract.handler
    description: Get contract info
    events:
      - http:
          method: get
          path: /contracts/{chain}/{address}
    timeout: 15

  getTrendingContracts:
    handler: src/handlers/getTrendingContracts.handler
    description: Get trending contracts
    events:
      - http:
          method: get
          path: /contracts/trending
    timeout: 29

  getGasUsed:
    handler: src/handlers/getGasUsed.handler
    description: Get gas used
    events:
      - http:
          method: get
          path: /gas_used/{address}

  getGasChart:
    handler: src/handlers/getGasChart.handler
    description: Get gas chart
    events:
      - http:
          method: get
          path: /gas/chart
    timeout: 15

  getHistory:
    handler: src/handlers/getHistory.handler
    description: Get address history
    events:
      - http:
          method: get
          path: /history/{address}
    timeout: 29

  getHistoryStats:
    handler: src/handlers/getHistoryStats.handler
    description: Get address history stats
    events:
      - http:
          method: get
          path: /history/{address}/stats
    timeout: 15

  getInfoStats:
    handler: src/handlers/getInfoStats.handler
    description: Get stats on supported protocols, chains and tokens
    events:
      - http:
          method: get
          path: /info/stats

  getInfoAddress:
    handler: src/handlers/getInfoAddress.handler
    description: Get address info
    events:
      - http:
          method: get
          path: /info/{address}
    timeout: 15

  getLabels:
    handler: src/handlers/getLabels.handler
    description: Get labels
    events:
      - http:
          method: get
          path: /labels/{address}

  getProtocols:
    handler: src/handlers/getProtocols.handler
    description: Get protocols
    events:
      - http:
          method: get
          path: /protocols

  getProtocolContracts:
    handler: src/handlers/getProtocolContracts.handler
    description: Get protocol contracts
    events:
      - http:
          method: get
          path: /protocols/{protocol}/contracts
    timeout: 10

  getProtocolHolders:
    handler: src/handlers/getProtocolHolders.handler
    description: Get protocol holders
    events:
      - http:
          method: get
          path: /protocols/{protocol}/holders
    timeout: 15

  getLatestProtocols:
    handler: src/handlers/getLatestProtocols.handler
    description: Get latest protocols
    events:
      - http:
          method: get
          path: /protocols/latest
    timeout: 15

  getLatestSnapshot:
    handler: src/handlers/getLatestSnapshot.handler
    description: Get latest snapshot
    events:
      - http:
          method: get
          path: /snapshots/{address}/latest
    timeout: 10

  getLatestTokensTransfers:
    handler: src/handlers/getLatestTokensTransfers.handler
    description: Get latest tokens transfers
    events:
      - http:
          method: get
          path: /tokens_transfers/{chain}/{address}/latest
    timeout: 10

  getSyncStatus:
    handler: src/handlers/getSyncStatus.handler
    description: Get sync status
    events:
      - http:
          method: get
          path: /sync_status
    timeout: 10

  getToken:
    handler: src/handlers/getToken.handler
    description: Get token
    events:
      - http:
          method: get
          path: /tokens/{chain}/{address}
    timeout: 20

  getTokenBalanceChart:
    handler: src/handlers/getTokenBalanceChart.handler
    description: Get token balance chart
    events:
      - http:
          method: get
          path: /balances/{address}/tokens/{token}/chart
    timeout: 10

  getTokenHolders:
    handler: src/handlers/getTokenHolders.handler
    description: Get the holders data for a token
    events:
      - http:
          method: get
          path: /holders/{address}
    timeout: 15

  getTokenYields:
    handler: src/handlers/getTokenYields.handler
    description: Get token yields
    events:
      - http:
          method: get
          path: /tokens/{chain}/{address}/yields
    timeout: 15

  getTokenLend:
    handler: src/handlers/getTokenLend.handler
    description: Get token lend pools
    events:
      - http:
          method: get
          path: /tokens/{chain}/{address}/lend
    timeout: 15

  getTokenBorrow:
    handler: src/handlers/getTokenBorrow.handler
    description: Get token borrow pools
    events:
      - http:
          method: get
          path: /tokens/{chain}/{address}/borrow
    timeout: 15

  scheduledRevalidateAdaptersContracts:
    handler: src/handlers/revalidateAdapters.scheduledRevalidateAdaptersContracts
    description: Revalidate expired adapters contracts
    events:
      - schedule: rate(15 minutes)
    memorySize: 1024
    timeout: 300

  scheduledUpdateCoingeckoCoins:
    handler: src/handlers/updateCoingeckoCoins.scheduledUpdateCoingeckoCoins
    description: Scheduled update Coingecko coins
    events:
      # every new hour
      - schedule: cron(0 * * * ? *)

  scheduledUpdateGovernanceProposals:
    handler: src/handlers/updateGovernanceProposals.scheduledUpdateGovernanceProposals
    description: Scheduled update governance proposals
    events:
      # every new hour
      - schedule: cron(0 * * * ? *)

  scheduledUpdateLendBorrow:
    handler: src/handlers/updateLendBorrow.scheduledUpdateLendBorrow
    description: Scheduled update lend borrow
    events:
      # every new hour
      - schedule: cron(0 * * * ? *)

  scheduledUpdateProtocols:
    handler: src/handlers/updateProtocols.scheduledUpdateProtocols
    description: Scheduled update protocols
    events:
      # every new hour
      - schedule: cron(0 * * * ? *)

  scheduledUpdateYields:
    handler: src/handlers/updateYields.scheduledUpdateYields
    description: Scheduled update yields
    events:
      # every new hour
      - schedule: cron(0 * * * ? *)

  revalidateAdapterContracts:
    handler: src/handlers/revalidateAdapters.revalidateAdapterContractsHandler
    description: Revalidate adapter contracts

  updateGovernanceProposals:
    handler: src/handlers/updateGovernanceProposals.handler
    description: Update governance proposals
    timeout: 300

  updateBalances:
    handler: src/handlers/updateBalances.handler
    description: Update balances
    events:
      - http:
          method: post
          path: /balances/{address}
    timeout: 29
    memorySize: 512

  updateCoingeckoCoins:
    handler: src/handlers/updateCoingeckoCoins.handler
    description: Update Coingecko coins
    timeout: 300

  updateLendBorrow:
    handler: src/handlers/updateLendBorrow.handler
    description: Update lend borrow
    timeout: 300

  updateProtocols:
    handler: src/handlers/updateProtocols.handler
    description: Update protocols
    timeout: 300

  updateYields:
    handler: src/handlers/updateYields.handler
    description: Update yields
    timeout: 300

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-llamafolio-table
  esbuild:
    config: './esbuild.config.cjs'
  prune:
    automatic: true
    number: 5 # Number of versions to keep

resources:
  # CORS for api gateway errors
  - ${file(resources/api-gateway-errors.yml)}

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-prune-plugin
